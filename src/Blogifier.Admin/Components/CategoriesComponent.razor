@inject HttpClient _http
@inject IStringLocalizer<Resource> _localizer

<div class="form-group">
	<label class="form-control-label">@_localizer["categories"]</label>
	<input type="text" class="form-control" @bind="Tag" @onkeyup="KeyPressed" name="tagItem" placeholder="Type and hit 'Enter'" />
</div>

@if (PostCategories != null)
{
	foreach (var item in PostCategories)
	{
		<div class="label label-tag">
			@item.Content
			<a href="" @onclick="()=> Remove(item.Id)" @onclick:preventDefault>
				<svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-x" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
					<path fill-rule="evenodd" d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
				</svg>
			</a>
		</div>
	}
}

@code {
	[Parameter] public Post Post { get; set; }

	protected string Tag { get; set; }
	protected List<Category> PostCategories { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await Load();
	}

	protected async Task Load()
	{
		Tag = "";
		PostCategories = (await _http.GetFromJsonAsync<ICollection<Category>>($"api/category/{Post.Id}")).ToList();
	}

	protected async Task KeyPressed(KeyboardEventArgs eventArgs)
	{
		if(eventArgs.Code == "Enter")
		{
			await _http.PostAsJsonAsync($"api/category/{Post.Id}/{Tag}", Tag);
			await Load();
		}
	}

	protected async Task Remove(int categoryId)
	{
		await _http.DeleteAsync($"api/category/{Post.Id}/{categoryId}");
		await Load();
	}
}