@inject HttpClient _http
@inject IStringLocalizer<Resource> _localizer

@if (Blog != null)
{
	<EditForm model="@Blog" OnValidSubmit="Save">
		<DataAnnotationsValidator />
		<ValidationSummary />
		<div class="form-group">
			<label class="form-control-label">@_localizer["title"]</label>
			<input type="text" class="form-control" @bind="Blog.Title" name="title" />
		</div>
		<div class="form-group">
			<label class="form-control-label">@_localizer["description"]</label>
			<input type="text" class="form-control" @bind="Blog.Description" name="description" />
		</div>
		<div class="form-group">
			<label class="form-control-label">@_localizer["items-per-page"]</label>
			<input type="text" class="form-control" @bind="Blog.ItemsPerPage" name="pageitems" />
		</div>
		<div class="form-group">
			<div class="custom-control custom-switch">
				<input type="checkbox" @bind="Blog.IncludeFeatured" class="custom-control-input" id="switch1">
				<label class="custom-control-label" for="switch1">@_localizer["include-featured"]</label>
			</div>
		</div>
		<div class="form-group">
			<label class="form-control-label">@_localizer["logo"]</label>
			<div class="input-group">
				<input type="text" class="form-control txt-upload" @bind="Blog.Logo" name="logo" id="logo" readonly="" />
				<span class="input-group-append">
					<button class="btn btn-outline-secondary" onclick="return fileManager.uploadClick('@UploadType.AppLogo');" type="button"> @_localizer["select"]</button>
				</span>
			</div>
		</div>
		<div class="form-group">
			<label class="form-control-label">@_localizer["cover"]</label>
			<div class="input-group">
				<input type="text" class="form-control txt-upload" @bind="Blog.Cover" name="cover" id="cover" readonly="" />
				<span class="input-group-append">
					<button class="btn btn-outline-secondary" onclick="return fileManager.uploadClick('@UploadType.AppCover');" type="button"> @_localizer["select"]</button>
				</span>
			</div>
		</div>
		<div class="form-submit-button">
			<input type="submit" value="@_localizer["save"]" class="btn btn-brand" />
		</div>
	</EditForm>
}
<ToasterComponent @ref="Toaster" />

@code {
	protected Blog Blog { get; set; }
	protected ToasterComponent Toaster;

	protected override async Task OnInitializedAsync()
	{
		Blog = await _http.GetFromJsonAsync<Blog>("api/blog");
	}

	protected async Task Save()
	{
		Toaster.Toast(await _http.PutAsJsonAsync<Blog>("api/blog", Blog));
	}
}